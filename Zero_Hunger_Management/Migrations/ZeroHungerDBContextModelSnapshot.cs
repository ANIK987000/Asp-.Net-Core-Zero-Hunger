// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Zero_Hunger_Management.Data;

#nullable disable

namespace Zero_Hunger_Management.Migrations
{
    [DbContext(typeof(ZeroHungerDBContext))]
    partial class ZeroHungerDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Zero_Hunger_Management.Models.AssignEmployee", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("CRID")
                        .HasColumnType("int");

                    b.Property<int>("EID")
                        .HasColumnType("int");

                    b.Property<DateTime>("MaxPreservedTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("RID")
                        .HasColumnType("int");

                    b.Property<string>("RLocation")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("CRID");

                    b.HasIndex("EID");

                    b.HasIndex("RID");

                    b.ToTable("AssignEmployees");
                });

            modelBuilder.Entity("Zero_Hunger_Management.Models.CollectRequest", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("ForHowManyPersons")
                        .HasColumnType("int");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("MaxPreservedTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("NGOID")
                        .HasColumnType("int");

                    b.Property<DateTime>("PresentTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("RID")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("NGOID");

                    b.HasIndex("RID");

                    b.ToTable("CollectRequests");
                });

            modelBuilder.Entity("Zero_Hunger_Management.Models.Employee", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("Zero_Hunger_Management.Models.NGO", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("NGOS");
                });

            modelBuilder.Entity("Zero_Hunger_Management.Models.Restaurant", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Restaurants");
                });

            modelBuilder.Entity("Zero_Hunger_Management.Models.AssignEmployee", b =>
                {
                    b.HasOne("Zero_Hunger_Management.Models.CollectRequest", "CollectRequests")
                        .WithMany("AssignEmployees")
                        .HasForeignKey("CRID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Zero_Hunger_Management.Models.Employee", "Employees")
                        .WithMany("AssignEmployees")
                        .HasForeignKey("EID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Zero_Hunger_Management.Models.Restaurant", "Restaurants")
                        .WithMany("AssignEmployees")
                        .HasForeignKey("RID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("CollectRequests");

                    b.Navigation("Employees");

                    b.Navigation("Restaurants");
                });

            modelBuilder.Entity("Zero_Hunger_Management.Models.CollectRequest", b =>
                {
                    b.HasOne("Zero_Hunger_Management.Models.NGO", null)
                        .WithMany("CollectRequests")
                        .HasForeignKey("NGOID");

                    b.HasOne("Zero_Hunger_Management.Models.Restaurant", "Restaurants")
                        .WithMany("CollectRequests")
                        .HasForeignKey("RID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Restaurants");
                });

            modelBuilder.Entity("Zero_Hunger_Management.Models.CollectRequest", b =>
                {
                    b.Navigation("AssignEmployees");
                });

            modelBuilder.Entity("Zero_Hunger_Management.Models.Employee", b =>
                {
                    b.Navigation("AssignEmployees");
                });

            modelBuilder.Entity("Zero_Hunger_Management.Models.NGO", b =>
                {
                    b.Navigation("CollectRequests");
                });

            modelBuilder.Entity("Zero_Hunger_Management.Models.Restaurant", b =>
                {
                    b.Navigation("AssignEmployees");

                    b.Navigation("CollectRequests");
                });
#pragma warning restore 612, 618
        }
    }
}
